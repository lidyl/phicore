version: 2

jobs:
  build:
    docker:
      - image: continuumio/miniconda
    steps:
      - checkout
      - run:
          command: |
              apt-get install -y make
              conda create -y -n phicore-env --file requirements.txt nomkl python=3.6
              source activate phicore-env
              pip install -e .
      - run:
          command: |
              source activate phicore-env
              pip install -r doc/requirements.txt
              cd doc/
              make html
      - add_ssh_keys:
          fingerprints:
            - "10:4e:40:e2:83:06:86:e7:f1:6b:70:8b:a0:e1:08:af"
      - run:
          command: |
              if [[ "${CIRCLE_BRANCH}" =~ ^master$|^[0-9]+\.[0-9]+\.X$ ]]; then
                  # By default the read-only Circle CI key appears to be used.
                  # We unload all active SSH keys, and use the one below instead.
                  # TODO: there should be a simpler way to achieve this
                  ssh-add -D
                  rm -f ~/.ssh/config
                  ssh-add ~/.ssh/id_rsa_*

                  git clone --depth 1 "git@github.com:lidyl/lidyl.github.io.git" /tmp/lidyl.github.io
                  rm -r /tmp/lidyl.github.io/phicore/doc/stable/
                  cp -r doc/_build/html /tmp/lidyl.github.io/phicore/doc/stable
                  cd /tmp/lidyl.github.io/
                  git config --global user.email "none@lidyl.io"
                  git config --global user.name "lidyl"
                  git config --global push.default matching
                  git add -f phicore/doc/stable/
                  git commit -m "Update documentation"
                  git push
              fi
      - store_artifacts:
          path: doc/_build/html
          destination: doc
  lint:
    docker:
      - image: continuumio/miniconda
    steps:
      - checkout
      - run:
           name: dependencies
           command: pip install flake8
      - run:
           name: lint
           command: flake8

workflows:
  version: 2
  build-doc-and-deploy:
    jobs:
      - build
      - lint
